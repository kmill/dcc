#!/bin/sh

#optstring="--opt=constprop --opt=deadcode --opt=blockelim"
#optstring="--opt=none"
optstring="--opt=all,-condelim,-parallelize -r"

file=$1
out=$2

if [ -z "$file" ]; then
    echo "Needs an input file";
    exit 1;
fi
if [ -z "$out" ]; then
    echo "Needs an output file";
    exit 1;
fi

base=`dirname $0`

if uname -a | grep "Darwin" > /dev/null; then
    echo "(compiling for Mac OS X)"
    d=`pwd`
    cd $base/tests/codegen/maclib
    make
    cd $d
    archstring="-arch x86_64"
    dccopt="--mac"
    lib="$base/tests/codegen/maclib/lib6035.o"
    LD_LIBRARY_PATH=$base/tests/codegen/maclib:$LD_LIBRARY_PATH
else
    d=`pwd`
    cd $base/tests/codegen/lib
    make
    cd $d
    archstring=""
    dccopt=""
    lib="-L$base/tests/codegen/lib -l6035 -l6035_2"
    if ! gcc -v 2>&1 |grep -q '^Target: x86_64-linux-gnu'; then
	echo "Refusing to run cross-compilation on non-64-bit architechure."
	exit 0;
    fi
fi

runcompiler() {
    $base/dcc $dccopt --target codegen $optstring -o $2 $1
}

fail=0

asm=`tempfile --suffix=.s`
runcompiler $file $asm;
gcc $archstring -o $out $asm $lib;
